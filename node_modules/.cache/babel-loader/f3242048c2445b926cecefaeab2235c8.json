{"ast":null,"code":"var _jsxFileName = \"D:\\\\hooks\\\\Login system with MARN\\\\Scila\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment, Profiler } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  to: `/profile/${user}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, name))), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n}, text), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"post-date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n}, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 19\n  }\n}, date), \" \"), sh, /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => addLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-thumbs-up\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n}), ' ', likes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }\n}, likes.length)), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => removeLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-thumbs-down\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(Link, {\n  to: `/posts/${_id}`,\n  className: \"btn btn-primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}, \"Discussion\", \" \", comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  className: \"comment-count\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }\n}, comments.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => deletePost(_id),\n  type: \"button\",\n  className: \"btn btn-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }\n}))));\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["D:/hooks/Login system with MARN/Scila/client/src/components/posts/PostItem.js"],"names":["React","Fragment","Profiler","PropTypes","Moment","connect","Link","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","sh","e","length","loading","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, Profiler } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {addLike , removeLike , deletePost} from '../../actions/post'\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">\r\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>{\" \"}\r\n      </p>\r\n      {sh}\r\n\r\n      <button onClick={e=>addLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-thumbs-up\"/>{' '}\r\n        {likes.length > 0 && (\r\n          <span>{likes.length}</span>\r\n        )}\r\n      </button>\r\n      <button onClick={e=>removeLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-thumbs-down\"/>\r\n      </button>\r\n      <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n        Discussion{\" \"}\r\n        {comments.length > 0 && (\r\n          <span className=\"comment-count\">{comments.length}</span>\r\n        )}\r\n      </Link>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button onClick={e=> deletePost(_id)} type=\"button\" className=\"btn btn-danger\">\r\n          <i className=\"fas fa-times\"/>\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike:PropTypes.func.isRequired,\r\n  removeLike:PropTypes.func.isRequired,\r\n  deletePost:PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {addLike,removeLike,deletePost})(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}