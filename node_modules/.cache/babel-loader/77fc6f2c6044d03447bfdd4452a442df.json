{"ast":null,"code":"import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getPosts } from \"../../actions/post\";\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return lad;\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["D:/hooks/Login system with MARN/Scila/client/src/components/post/Posts.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getPosts","Posts","post","posts","loading","lad","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACD,EAAAA,QAAD;AAAYE,EAAAA,IAAI,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAjB,CAAD,KAAuC;AACjDR,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,QAAQ;AACX,GAFQ,EAEP,CAACA,QAAD,CAFO,CAAT;AAGF,SAAOK,GAAP;AACD,CALD;;AAOAJ,KAAK,CAACK,SAAN,GAAkB;AAChBN,EAAAA,QAAQ,EAAEH,SAAS,CAACU,IAAV,CAAeC,UADT;AAEhBN,EAAAA,IAAI,EAAEL,SAAS,CAACY,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADsB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACY,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getPosts } from \"../../actions/post\";\r\n\r\nconst Posts = ({getPosts , post:{posts,loading}}) => {\r\n    useEffect(()=>{\r\n        getPosts();\r\n    },[getPosts])\r\n  return lad\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n"]},"metadata":{},"sourceType":"module"}