{"ast":null,"code":"import { GET_POST, POST_ERROR, UPDATE_LIKES } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POST:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        payload: state.post.map(post => post._id === payload.id)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/hooks/Login system with MARN/Scila/client/src/reducers/post.js"],"names":["GET_POST","POST_ERROR","UPDATE_LIKES","initialState","posts","post","loading","error","state","action","type","payload","map","_id","id"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,UAAjB,EAA4BC,YAA5B,QAA+C,kBAA/C;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,IAAI,EAAC,IAFY;AAGjBC,EAAAA,OAAO,EAAC,IAHS;AAIjBC,EAAAA,KAAK,EAAC;AAJW,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA8BM,MAA9B,EAAqC;AAChD,QAAM;AAAEC,IAAAA,IAAF;AAASC,IAAAA;AAAT,MAAqBF,MAA3B;;AAEA,UAAOC,IAAP;AACI,SAAKV,QAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFJ,QAAAA,KAAK,EAACO,OAFJ;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKL,UAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFD,QAAAA,KAAK,EAACI,OAFJ;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKJ,YAAL;AACI,aAAM,EACF,GAAGM,KADD;AAEFG,QAAAA,OAAO,EAAEH,KAAK,CAACH,IAAN,CAAWO,GAAX,CAAeP,IAAI,IAAGA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACG,EAA3C;AAFP,OAAN;;AAIJ;AACI,aAAON,KAAP;AAnBR;AAqBH","sourcesContent":["import {GET_POST,POST_ERROR,UPDATE_LIKES} from '../actions/types'\r\n\r\n\r\nconst initialState = {\r\n    posts:[],\r\n    post:null,\r\n    loading:true,\r\n    error:{}\r\n};\r\n\r\nexport default function(state = initialState,action){\r\n    const { type , payload } = action\r\n\r\n    switch(type){\r\n        case GET_POST:\r\n            return{\r\n                ...state,\r\n                posts:payload,\r\n                loading:false\r\n            };\r\n        case POST_ERROR:\r\n            return{\r\n                ...state,\r\n                error:payload,\r\n                loading:false\r\n            };\r\n        case UPDATE_LIKES:\r\n            return{\r\n                ...state,\r\n                payload: state.post.map(post =>post._id === payload.id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}