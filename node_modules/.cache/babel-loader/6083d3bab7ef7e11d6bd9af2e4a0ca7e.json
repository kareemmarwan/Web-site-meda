{"ast":null,"code":"import { GET_POSTS, GET_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, ADD_COMMENT, REMOVE_COMMENT, REMOVE_ALERT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: state.post.comments.fil\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/hooks/Login system with MARN/Scila/client/src/reducers/post.js"],"names":["GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","REMOVE_ALERT","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","id","likes","comments","fil"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,QAAlB,EAA2BC,UAA3B,EAAsCC,YAAtC,EAAqDC,WAArD,EAAiEC,QAAjE,EAA0EC,WAA1E,EAAsFC,cAAtF,EAAsGC,YAAtG,QAAyH,kBAAzH;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,IAAI,EAAC,IAFY;AAGjBC,EAAAA,OAAO,EAAC,IAHS;AAIjBC,EAAAA,KAAK,EAAC;AAJW,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA8BM,MAA9B,EAAqC;AAChD,QAAM;AAAEC,IAAAA,IAAF;AAASC,IAAAA;AAAT,MAAqBF,MAA3B;;AAEA,UAAOC,IAAP;AACI,SAAKhB,SAAL;AACI,aAAM,EACF,GAAGc,KADD;AAEFJ,QAAAA,KAAK,EAACO,OAFJ;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKX,QAAL;AACI,aAAM,EACF,GAAGa,KADD;AAEFH,QAAAA,IAAI,EAACM,OAFH;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKP,QAAL;AACI,aAAM,EACF,GAAGS,KADD;AAEFJ,QAAAA,KAAK,EAAC,CAACO,OAAD,EAAS,GAAGH,KAAK,CAACJ,KAAlB,CAFJ;AAGFE,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKR,WAAL;AACI,aAAM,EACF,GAAGU,KADD;AAEFJ,QAAAA,KAAK,EAACI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAxC,CAFJ;AAGFL,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ,SAAKV,UAAL;AACI,aAAM,EACF,GAAGY,KADD;AAEFD,QAAAA,KAAK,EAACI,OAFJ;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKT,YAAL;AACI,aAAM,EACF,GAAGW,KADD;AAEFJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAgBT,IAAI,IACvBA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,EAArB,GAA0B,EAAC,GAAGV,IAAJ;AAASW,UAAAA,KAAK,EAACL,OAAO,CAACK;AAAvB,SAA1B,GAAwDX,IADrD,CAFL;AAIFC,QAAAA,OAAO,EAAC;AAJN,OAAN;;AAMJ,SAAKN,WAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFH,QAAAA,IAAI,EAAC,EAAC,GAAGG,KAAK,CAACH,IAAV;AAAeY,UAAAA,QAAQ,EAACN;AAAxB,SAFH;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKL,cAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFH,QAAAA,IAAI,EAAC,EACD,GAAGG,KAAK,CAACH,IADR;AAEDY,UAAAA,QAAQ,EAACT,KAAK,CAACH,IAAN,CAAWY,QAAX,CAAoBC;AAF5B;AAFH,OAAN;;AAOJ;AACI,aAAOV,KAAP;AArDR;AAuDH","sourcesContent":["import {GET_POSTS,GET_POST,POST_ERROR,UPDATE_LIKES , DELETE_POST,ADD_POST,ADD_COMMENT,REMOVE_COMMENT, REMOVE_ALERT} from '../actions/types'\r\n\r\n\r\nconst initialState = {\r\n    posts:[],\r\n    post:null,\r\n    loading:true,\r\n    error:{}\r\n};\r\n\r\nexport default function(state = initialState,action){\r\n    const { type , payload } = action\r\n\r\n    switch(type){\r\n        case GET_POSTS:\r\n            return{\r\n                ...state,\r\n                posts:payload,\r\n                loading:false\r\n            };\r\n        case GET_POST:\r\n            return{\r\n                ...state,\r\n                post:payload,\r\n                loading:false\r\n            }\r\n        case ADD_POST:\r\n            return{\r\n                ...state,\r\n                posts:[payload,...state.posts],\r\n                loading:false\r\n            };\r\n        case DELETE_POST:\r\n            return{\r\n                ...state,\r\n                posts:state.posts.filter(post => post._id !== payload),\r\n                loading: false\r\n            };\r\n        case POST_ERROR:\r\n            return{\r\n                ...state,\r\n                error:payload,\r\n                loading:false\r\n            };\r\n        case UPDATE_LIKES:\r\n            return{\r\n                ...state,\r\n                posts: state.posts.map(post =>\r\n                    post._id === payload.id ? {...post,likes:payload.likes}:post),\r\n                loading:false\r\n            };\r\n        case ADD_COMMENT:\r\n            return{\r\n                ...state,\r\n                post:{...state.post,comments:payload},\r\n                loading:false\r\n            }\r\n        case REMOVE_COMMENT:\r\n            return{\r\n                ...state,\r\n                post:{\r\n                    ...state.post,\r\n                    comments:state.post.comments.fil\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}