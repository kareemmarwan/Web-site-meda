{"ast":null,"code":"var _jsxFileName = \"D:\\\\hooks\\\\Login system with MARN\\\\Scila\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport { Link } from \"react-router-dom\";\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }, \"Back To Profile\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }\n  }, \" Edit Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }\n  }, \"Experience\"), profile.experience.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }\n  }, profile.experience.map(experience => /*#__PURE__*/React.createElement(ProfileExperience, {\n    key: experience._id,\n    experience: experience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 28\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, \" No experience credentials\")))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["D:/hooks/Login system with MARN/Scila/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileTop from './ProfileTop'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileExperience from './ProfileExperience'\r\nimport ProfileEducation from './ProfileEducation'\r\n\r\n\r\n\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById]);\r\n  return(\r\n    <Fragment>\r\n     {profile === null || loading ? <Spinner /> : <Fragment>\r\n         <Link to='/profiles' className='btn btn-light'>\r\n             Back To Profile\r\n         </Link>\r\n         {auth.isAuthenticated &&\r\n          auth.loading === false &&\r\n          auth.user._id === profile.user._id &&(\r\n             <Link to='/edit-profile' className='btn btn-dark'> Edit Profile</Link>\r\n         )}\r\n          <div className=\"profile-grid my-1\">\r\n              <ProfileTop profile={profile} />\r\n              <ProfileAbout profile={profile} />\r\n              <div className='profile-exp bg-white p-2'>\r\n               <h2 className='text-primary'>Experience</h2>\r\n               {profile.experience.length > 0 ? (\r\n                   <Fragment>\r\n                       {profile.experience.map(experience=>(\r\n                           <ProfileExperience key={experience._id}\r\n                           experience={experience}\r\n                           />\r\n                       ))}\r\n                   </Fragment>\r\n               ):(<h4> No experience credentials</h4>)}\r\n                   \r\n               \r\n\r\n              </div>\r\n            \r\n          </div>\r\n         </Fragment>\r\n}\r\n  </Fragment>\r\n  )\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n"]},"metadata":{},"sourceType":"module"}